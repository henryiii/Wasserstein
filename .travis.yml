language: python

install: pip3 install --upgrade numpy pytest cibuildwheel twine

script:
  - python3 setup.py install
  - pytest wasserstein

stages:
  - test
  - name: deploy
    if: tag IS PRESENT AND repo = pkomiske/Wasserstein

dist:
  - xenial
  - bionic

jobs:
  exclude:

    # ensure that the Linux distros are only deployed once
    - stage: deploy
      dist: xenial

  include:

    # test on linux
    - name: "Test on Linux"
      stage: test
      os: linux
      python:
        - 3.6
        - 3.7
        - 3.8

    # test on Mac
    - name: "Test on Mac"
      stage: test
      os: mac
      osx_image: xcode12
      language: shell
      before_install:
        - brew update > /dev/null
        - sudo brew install python libomp

    # test on Windows
    - name: "Test on Windows"
      stage: test
      os: windows
      language: shell
      before_install: 
        - choco install python --version 3.8.0
        - ln -s /c/Python38/python.exe /c/Python38/python3.exe
      env:
        - PATH="/c/Python38:/c/Python38/Scripts:$PATH"

    # deploy a source distribution
    - name: "Deploy a source distribution"
      stage: deploy
      script: python3 setup.py sdist --formats=gztar
      after_success: python3 -m twine upload --skip-existing dist/*.tar.gz

    # deploy on windows
    - name: "Deploy on Windows"
      stage: deploy
      os: windows
      language: shell
      before_install: choco install python --version 3.8.0
      script: python -m cibuildwheel --output-dir wheelhouse
      after_success: python -m twine upload --skip-existing wheelhouse/*.whl
      env:
        - PATH="/c/Python38:/c/Python38/Scripts:$PATH"
        - CIBW_BUILD="cp27-win_amd64 cp35-win_amd64 cp36-win_amd64 cp37-win_amd64 cp38-win_amd64"

    # deploy on mac
    - name: "Deploy on Mac"
      stage: deploy
      os: mac
      osx_image: xcode12
      language: shell
      before_install:
        - brew update > /dev/null
        - sudo brew install python libomp
      script: python3 -m cibuildwheel --output-dir wheelhouse
      after_success: python3 -m twine upload --skip-existing wheelhouse/*.whl
      env:
        - CIBW_BUILD="cp27-macosx_x86_64 cp35-macosx_x86_64 cp36-macosx_x86_64 cp37-macosx_x86_64 cp38-macosx_x86_64"

    # deploy on linux
    - name: "Deploy on Linux"
      stage: deploy
      services: docker
      arch: x86_64
      env:
        - CIBW_BUILD="cp27-manylinux_x86_64 cp35-manylinux_x86_64 cp36-manylinux_x86_64 cp37-manylinux_x86_64 cp38-manylinux_x86_64"
        - CIBW_MANYLINUX_X86_64_IMAGE=quay.io/pypa/manylinux2010_x86_64

env:
  global:
    - TWINE_USERNAME=__token__
    # TWINE_PASSWORD set in TravisCI settings for this project
